// Download CV as PDF - GitHub Pages Compatible
// Fallback solution without external PDF libraries

// Condensed CV data for PDF generation
const pdfData = {
    personal: {
        name: "L√™ Quang ƒê·∫°i Dƒ©",
        title: {
            en: "SECURITY ENGINEER | BACKEND DEVELOPER",
            vi: "K·ª∏ S∆Ø B·∫¢O M·∫¨T | L·∫¨P TR√åNH VI√äN BACKEND"
        },
        contact: {
            phone: "0929860265",
            email: "dile8861@gmail.com"
        }
    },
    
    about: {
        en: "Security Engineer with strong expertise in backend development and system security monitoring. Experienced in SIEM systems, vulnerability assessment, and AWS cloud infrastructure. Skilled in Python, Django, and security frameworks with a focus on DevSecOps practices.",
        vi: "K·ªπ s∆∞ B·∫£o m·∫≠t v·ªõi chuy√™n m√¥n m·∫°nh v·ªÅ ph√°t tri·ªÉn backend v√† gi√°m s√°t b·∫£o m·∫≠t h·ªá th·ªëng. C√≥ kinh nghi·ªám v·ªÅ h·ªá th·ªëng SIEM, ƒë√°nh gi√° l·ªó h·ªïng v√† h·∫° t·∫ßng AWS cloud. Th√†nh th·∫°o Python, Django v√† c√°c framework b·∫£o m·∫≠t v·ªõi tr·ªçng t√¢m v·ªÅ DevSecOps."
    },
    
    skills: {
        en: "Programming: Python, TypeScript, Django, Flask, Angular ‚Ä¢ Cloud & DevOps: AWS, GitHub Actions, CI/CD ‚Ä¢ Security: OpenVAS, Splunk, Wazuh, MITRE ATT&CK ‚Ä¢ Database: MySQL, MongoDB, DynamoDB",
        vi: "L·∫≠p tr√¨nh: Python, TypeScript, Django, Flask, Angular ‚Ä¢ Cloud & DevOps: AWS, GitHub Actions, CI/CD ‚Ä¢ B·∫£o m·∫≠t: OpenVAS, Splunk, Wazuh, MITRE ATT&CK ‚Ä¢ C∆° s·ªü d·ªØ li·ªáu: MySQL, MongoDB, DynamoDB"
    },
    
    education: {
        en: "Gia Dinh University - GPA: 3.5/4.0",
        vi: "ƒê·∫°i h·ªçc Gia ƒê·ªãnh - GPA: 3.5/4.0"
    },
    
    experience: [
        {
            company: "BaseBS Corporation",
            position: "Backend Developer",
            duration: {
                en: "05/2025 ‚Äì Present",
                vi: "05/2025 ‚Äì Nay"
            },
            description: {
                en: "‚Ä¢ Optimized core features for uCRM system across multiple agents\n‚Ä¢ Implemented security measures: API design, access control, data protection\n‚Ä¢ Technologies: Python, Django, Redis, Celery, MongoDB",
                vi: "‚Ä¢ T·ªëi ∆∞u c√°c t√≠nh nƒÉng c·ªët l√µi cho h·ªá th·ªëng uCRM tr√™n nhi·ªÅu agent\n‚Ä¢ Tri·ªÉn khai c√°c bi·ªán ph√°p b·∫£o m·∫≠t: thi·∫øt k·∫ø API, ki·ªÉm so√°t truy c·∫≠p, b·∫£o v·ªá d·ªØ li·ªáu\n‚Ä¢ C√¥ng ngh·ªá: Python, Django, Redis, Celery, MongoDB"
            }
        },
        {
            company: "FECredit (VPBank SMBC)",
            position: "Backend Engineer",
            duration: {
                en: "04/2024 ‚Äì 05/2025",
                vi: "04/2024 ‚Äì 05/2025"
            },
            description: {
                en: "‚Ä¢ Developed Portal system for internal support and production business processing\n‚Ä¢ Built Voolo app (Buy Now - Pay Later) and FEOL 2.0 loan application\n‚Ä¢ Implemented comprehensive security: DDoS protection, session management, API security\n‚Ä¢ Reduced QA/QC test data creation time by 40%\n‚Ä¢ Technologies: AWS, Python, API Gateway, Lambda, DynamoDB",
                vi: "‚Ä¢ Ph√°t tri·ªÉn h·ªá th·ªëng Portal cho h·ªó tr·ª£ n·ªôi b·ªô v√† x·ª≠ l√Ω nghi·ªáp v·ª• s·∫£n xu·∫•t\n‚Ä¢ X√¢y d·ª±ng ·ª©ng d·ª•ng Voolo (Mua ngay - Tr·∫£ sau) v√† FEOL 2.0 vay v·ªën\n‚Ä¢ Tri·ªÉn khai b·∫£o m·∫≠t to√†n di·ªán: ch·ªëng DDoS, qu·∫£n l√Ω session, b·∫£o m·∫≠t API\n‚Ä¢ Gi·∫£m 40% th·ªùi gian t·∫°o data test cho QA/QC\n‚Ä¢ C√¥ng ngh·ªá: AWS, Python, API Gateway, Lambda, DynamoDB"
            }
        },
        {
            company: "HTC Global Solutions",
            position: "SOC Analyst Tier 2 Intern",
            duration: {
                en: "04/2023 ‚Äì 01/2024",
                vi: "04/2023 ‚Äì 01/2024"
            },
            description: {
                en: "‚Ä¢ Built security monitoring system for Ca Mau IT Department\n‚Ä¢ Implemented vulnerability scanning using OpenVAS and Splunk SIEM\n‚Ä¢ Maintained real-time system stability and security monitoring\n‚Ä¢ Technologies: Splunk, OpenVAS, Security Analytics",
                vi: "‚Ä¢ X√¢y d·ª±ng h·ªá th·ªëng gi√°m s√°t b·∫£o m·∫≠t cho S·ªü TT&TT C√† Mau\n‚Ä¢ Tri·ªÉn khai qu√©t l·ªó h·ªïng b·∫±ng OpenVAS v√† SIEM Splunk\n‚Ä¢ Duy tr√¨ t√≠nh ·ªïn ƒë·ªãnh v√† gi√°m s√°t b·∫£o m·∫≠t real-time\n‚Ä¢ C√¥ng ngh·ªá: Splunk, OpenVAS, Security Analytics"
            }
        }
    ]
};

// Create PDF using window.print() - GitHub Pages compatible
function downloadPDF(language = 'en') {
    // Create a new window for PDF content
    const printWindow = window.open('', '_blank');
    
    if (!printWindow) {
        alert('Please allow popups for this site to download PDF');
        return;
    }
    
    // Generate HTML content for PDF
    const htmlContent = generatePDFHTML(language);
    
    // Write content to new window
    printWindow.document.write(htmlContent);
    printWindow.document.close();
    
    // Wait for content to load, then trigger print
    printWindow.onload = function() {
        setTimeout(() => {
            printWindow.print();
            // Close window after printing
            printWindow.onafterprint = function() {
                printWindow.close();
            };
        }, 500);
    };
    
    // Close dropdown after opening print dialog
    const dropdown = document.getElementById('main-dropdown');
    const dropdownContainer = document.querySelector('.download-dropdown');
    if (dropdown) dropdown.classList.remove('show');
    if (dropdownContainer) dropdownContainer.classList.remove('active');
    
    // Show success notification
    showNotification(
        language === 'en' ? 
        '‚úì Print dialog opened - Save as PDF' : 
        '‚úì ƒê√£ m·ªü h·ªôp tho·∫°i in - L∆∞u th√†nh PDF'
    );
}

// Generate HTML content for PDF
function generatePDFHTML(language) {
    return `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>${pdfData.personal.name} - CV</title>
    <style>
        @page {
            size: A4;
            margin: 0;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Arial', 'Helvetica', sans-serif;
            font-size: 11px;
            line-height: 1.4;
            color: #333;
            background: white;
            width: 210mm;
            min-height: 297mm;
            padding: 15mm;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .name {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 8px;
        }
        
        .title {
            font-size: 14px;
            margin-bottom: 10px;
            opacity: 0.9;
        }
        
        .contact {
            font-size: 12px;
        }
        
        .section {
            margin-bottom: 18px;
        }
        
        .section-title {
            font-size: 14px;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 10px;
            padding-bottom: 4px;
            border-bottom: 2px solid #667eea;
        }
        
        .about-content {
            color: #4a5568;
            line-height: 1.5;
            text-align: justify;
        }
        
        .skills-content {
            color: #4a5568;
            line-height: 1.5;
        }
        
        .education-content {
            color: #4a5568;
            font-weight: 500;
        }
        
        .experience-item {
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .experience-item:last-child {
            border-bottom: none;
        }
        
        .company-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 4px;
        }
        
        .company-name {
            font-weight: bold;
            color: #2d3748;
            font-size: 12px;
        }
        
        .duration {
            color: #666;
            font-size: 10px;
        }
        
        .position {
            font-style: italic;
            color: #667eea;
            margin-bottom: 8px;
            font-size: 11px;
        }
        
        .description {
            color: #4a5568;
            white-space: pre-line;
            font-size: 10px;
            line-height: 1.4;
        }
        
        .footer {
            position: fixed;
            bottom: 10mm;
            left: 50%;
            transform: translateX(-50%);
            font-size: 8px;
            color: #999;
        }
        
        /* Print styles */
        @media print {
            body {
                width: auto;
                height: auto;
                padding: 15mm;
            }
            
            .header {
                break-inside: avoid;
            }
            
            .experience-item {
                break-inside: avoid;
            }
            
            .section {
                break-inside: avoid;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="name">${pdfData.personal.name}</div>
        <div class="title">${pdfData.personal.title[language]}</div>
        <div class="contact">üì± ${pdfData.personal.contact.phone} | ‚úâÔ∏è ${pdfData.personal.contact.email}</div>
    </div>
    
    <div class="section">
        <div class="section-title">${language === 'en' ? 'ABOUT' : 'GI·ªöI THI·ªÜU'}</div>
        <div class="about-content">${pdfData.about[language]}</div>
    </div>
    
    <div class="section">
        <div class="section-title">${language === 'en' ? 'TECHNICAL SKILLS' : 'K·ª∏ NƒÇNG CHUY√äN M√îN'}</div>
        <div class="skills-content">${pdfData.skills[language]}</div>
    </div>
    
    <div class="section">
        <div class="section-title">${language === 'en' ? 'EDUCATION' : 'H·ªåC V·∫§N'}</div>
        <div class="education-content">${pdfData.education[language]}</div>
    </div>
    
    <div class="section">
        <div class="section-title">${language === 'en' ? 'PROFESSIONAL EXPERIENCE' : 'KINH NGHI·ªÜM NGH·ªÄ NGHI·ªÜP'}</div>
        ${pdfData.experience.map(exp => `
            <div class="experience-item">
                <div class="company-header">
                    <div class="company-name">${exp.company}</div>
                    <div class="duration">${exp.duration[language]}</div>
                </div>
                <div class="position">${exp.position}</div>
                <div class="description">${exp.description[language]}</div>
            </div>
        `).join('')}
    </div>
    
    <div class="footer">
        ${language === 'en' ? 
            'Generated automatically from dynamic CV system' : 
            'ƒê∆∞·ª£c t·∫°o t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng CV ƒë·ªông'
        }
    </div>
</body>
</html>
    `;
}

// Alternative method using data URL (more compatible)
function downloadPDFAlternative(language = 'en') {
    const content = generatePDFContent(language);
    const blob = new Blob([content], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = language === 'en' ? 
        'Le_Quang_Dai_Di_CV_English.html' : 
        'Le_Quang_Dai_Di_CV_Vietnamese.html';
    
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
    
    // Close dropdown
    const dropdown = document.getElementById('main-dropdown');
    const dropdownContainer = document.querySelector('.download-dropdown');
    if (dropdown) dropdown.classList.remove('show');
    if (dropdownContainer) dropdownContainer.classList.remove('active');
    
    showNotification(
        language === 'en' ? 
        '‚úì CV HTML downloaded - Open and print as PDF' : 
        '‚úì ƒê√£ t·∫£i CV HTML - M·ªü v√† in th√†nh PDF'
    );
}

// Generate complete HTML for download
function generatePDFContent(language) {
    return `<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>${pdfData.personal.name} - CV</title>
    <style>
        @page { size: A4; margin: 15mm; }
        body { font-family: Arial, sans-serif; font-size: 11px; line-height: 1.4; color: #333; }
        .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center; border-radius: 8px; margin-bottom: 20px; }
        .name { font-size: 24px; font-weight: bold; margin-bottom: 8px; }
        .title { font-size: 14px; margin-bottom: 10px; }
        .contact { font-size: 12px; }
        .section { margin-bottom: 18px; }
        .section-title { font-size: 14px; font-weight: bold; color: #667eea; margin-bottom: 10px; padding-bottom: 4px; border-bottom: 2px solid #667eea; }
        .experience-item { margin-bottom: 15px; padding-bottom: 15px; border-bottom: 1px solid #e2e8f0; }
        .company-header { display: flex; justify-content: space-between; margin-bottom: 4px; }
        .company-name { font-weight: bold; color: #2d3748; }
        .duration { color: #666; font-size: 10px; }
        .position { font-style: italic; color: #667eea; margin-bottom: 8px; }
        .description { color: #4a5568; white-space: pre-line; font-size: 10px; }
        @media print { body { margin: 0; } }
    </style>
</head>
<body>
    <div class="header">
        <div class="name">${pdfData.personal.name}</div>
        <div class="title">${pdfData.personal.title[language]}</div>
        <div class="contact">üì± ${pdfData.personal.contact.phone} | ‚úâÔ∏è ${pdfData.personal.contact.email}</div>
    </div>
    <div class="section">
        <div class="section-title">${language === 'en' ? 'ABOUT' : 'GI·ªöI THI·ªÜU'}</div>
        <div>${pdfData.about[language]}</div>
    </div>
    <div class="section">
        <div class="section-title">${language === 'en' ? 'TECHNICAL SKILLS' : 'K·ª∏ NƒÇNG CHUY√äN M√îN'}</div>
        <div>${pdfData.skills[language]}</div>
    </div>
    <div class="section">
        <div class="section-title">${language === 'en' ? 'EDUCATION' : 'H·ªåC V·∫§N'}</div>
        <div>${pdfData.education[language]}</div>
    </div>
    <div class="section">
        <div class="section-title">${language === 'en' ? 'PROFESSIONAL EXPERIENCE' : 'KINH NGHI·ªÜM NGH·ªÄ NGHI·ªÜP'}</div>
        ${pdfData.experience.map(exp => `
            <div class="experience-item">
                <div class="company-header">
                    <div class="company-name">${exp.company}</div>
                    <div class="duration">${exp.duration[language]}</div>
                </div>
                <div class="position">${exp.position}</div>
                <div class="description">${exp.description[language]}</div>
            </div>
        `).join('')}
    </div>
</body>
</html>`;
}

// Show notification function
function showNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: #38b2ac;
        color: white;
        padding: 10px 20px;
        border-radius: 25px;
        z-index: 10000;
        font-size: 14px;
        box-shadow: 0 4px 15px rgba(56, 178, 172, 0.3);
        transition: all 0.3s ease;
    `;
    
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(-50%) translateY(-20px)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// Export functions for use in main script
window.downloadPDF = downloadPDF;
window.downloadPDFAlternative = downloadPDFAlternative;
        yPosition += 8;
    });
    
    // Footer
    doc.setTextColor(...lightGray);
    doc.setFontSize(8);
    doc.text(
        language === 'en' ? 
        'Generated automatically from dynamic CV system' : 
        'ƒê∆∞·ª£c t·∫°o t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng CV ƒë·ªông', 
        pageWidth / 2, 
        280, 
        { align: 'center' }
    );
    
    // Save the PDF
    const fileName = language === 'en' ? 
        'Le_Quang_Dai_Di_CV_English.pdf' : 
        'Le_Quang_Dai_Di_CV_Vietnamese.pdf';
    
    doc.save(fileName);
    
    // Close dropdown after download
    const dropdown = document.getElementById('main-dropdown');
    const dropdownContainer = document.querySelector('.download-dropdown');
    if (dropdown) dropdown.classList.remove('show');
    if (dropdownContainer) dropdownContainer.classList.remove('active');
    
    // Show success notification
    showNotification(
        language === 'en' ? 
        '‚úì CV PDF downloaded successfully!' : 
        '‚úì T·∫£i PDF CV th√†nh c√¥ng!'
    );
}

// Alternative: Generate PDF using html2pdf (if available)
function downloadPDFFromHTML(language = 'en') {
    if (typeof window.html2pdf === 'undefined') {
        console.error('html2pdf library not found. Falling back to jsPDF.');
        downloadPDF(language);
        return;
    }
    
    // Create a temporary container for PDF content
    const container = document.createElement('div');
    container.style.cssText = `
        width: 210mm;
        min-height: 297mm;
        padding: 20mm;
        font-family: 'Arial', sans-serif;
        font-size: 12px;
        line-height: 1.4;
        color: #333;
        background: white;
        position: absolute;
        left: -9999px;
        top: -9999px;
    `;
    
    // Set language
    container.setAttribute('data-lang', language);
    
    // Add CSS for language switching
    const style = document.createElement('style');
    style.textContent = `
        .lang-en, .lang-vi { display: block; }
        [data-lang="vi"] .lang-en { display: none; }
        [data-lang="en"] .lang-vi { display: none; }
        .pdf-header { 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        .pdf-section { margin-bottom: 15px; }
        .pdf-section-title { 
            font-size: 16px;
            font-weight: bold;
            color: #667eea;
            margin-bottom: 8px;
            border-bottom: 2px solid #667eea;
            padding-bottom: 2px;
        }
        .pdf-company { 
            font-weight: bold;
            color: #4a5568;
            margin-bottom: 4px;
        }
        .pdf-duration { 
            float: right;
            color: #666;
        }
        .pdf-position { 
            font-style: italic;
            margin-bottom: 6px;
        }
        .pdf-description { 
            white-space: pre-line;
            margin-bottom: 12px;
        }
    `;
    document.head.appendChild(style);
    
    container.innerHTML = `
        <div class="pdf-header">
            <h1 style="margin: 0; font-size: 28px;">${pdfData.personal.name}</h1>
            <p style="margin: 8px 0; font-size: 16px;">
                <span class="lang-en">${pdfData.personal.title.en}</span>
                <span class="lang-vi">${pdfData.personal.title.vi}</span>
            </p>
            <p style="margin: 8px 0;">üì± ${pdfData.personal.contact.phone} | ‚úâÔ∏è ${pdfData.personal.contact.email}</p>
        </div>
        
        <div class="pdf-section">
            <div class="pdf-section-title">
                <span class="lang-en">ABOUT</span>
                <span class="lang-vi">GI·ªöI THI·ªÜU</span>
            </div>
            <p>
                <span class="lang-en">${pdfData.about.en}</span>
                <span class="lang-vi">${pdfData.about.vi}</span>
            </p>
        </div>
        
        <div class="pdf-section">
            <div class="pdf-section-title">
                <span class="lang-en">TECHNICAL SKILLS</span>
                <span class="lang-vi">K·ª∏ NƒÇNG CHUY√äN M√îN</span>
            </div>
            <p>
                <span class="lang-en">${pdfData.skills.en}</span>
                <span class="lang-vi">${pdfData.skills.vi}</span>
            </p>
        </div>
        
        <div class="pdf-section">
            <div class="pdf-section-title">
                <span class="lang-en">EDUCATION</span>
                <span class="lang-vi">H·ªåC V·∫§N</span>
            </div>
            <p>
                <span class="lang-en">${pdfData.education.en}</span>
                <span class="lang-vi">${pdfData.education.vi}</span>
            </p>
        </div>
        
        <div class="pdf-section">
            <div class="pdf-section-title">
                <span class="lang-en">PROFESSIONAL EXPERIENCE</span>
                <span class="lang-vi">KINH NGHI·ªÜM NGH·ªÄ NGHI·ªÜP</span>
            </div>
            ${pdfData.experience.map(exp => `
                <div style="margin-bottom: 15px;">
                    <div class="pdf-company">
                        ${exp.company}
                        <span class="pdf-duration">
                            <span class="lang-en">${exp.duration.en}</span>
                            <span class="lang-vi">${exp.duration.vi}</span>
                        </span>
                    </div>
                    <div class="pdf-position">${exp.position}</div>
                    <div class="pdf-description">
                        <span class="lang-en">${exp.description.en}</span>
                        <span class="lang-vi">${exp.description.vi}</span>
                    </div>
                </div>
            `).join('')}
        </div>
    `;
    
    document.body.appendChild(container);
    
    // Generate PDF
    const options = {
        margin: 0,
        filename: language === 'en' ? 
            'Le_Quang_Dai_Di_CV_English.pdf' : 
            'Le_Quang_Dai_Di_CV_Vietnamese.pdf',
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 2 },
        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }
    };
    
    html2pdf().set(options).from(container).save().then(() => {
        // Clean up
        document.body.removeChild(container);
        document.head.removeChild(style);
        
        // Show success notification
        showNotification(
            language === 'en' ? 
            '‚úì CV PDF downloaded successfully!' : 
            '‚úì T·∫£i PDF CV th√†nh c√¥ng!'
        );
    });
}

// Show notification function (reuse from main script)
function showNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: #38b2ac;
        color: white;
        padding: 10px 20px;
        border-radius: 25px;
        z-index: 10000;
        font-size: 14px;
        box-shadow: 0 4px 15px rgba(56, 178, 172, 0.3);
        transition: all 0.3s ease;
    `;
    
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.opacity = '0';
        notification.style.transform = 'translateX(-50%) translateY(-20px)';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// Export functions for use in main script
window.downloadPDF = downloadPDF;
window.downloadPDFFromHTML = downloadPDFFromHTML;