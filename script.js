let currentLang = 'en';
let isDarkMode = false;

function toggleLanguage() {
    currentLang = currentLang === 'en' ? 'vi' : 'en';
    document.body.setAttribute('data-lang', currentLang);
    
    // Update button text
    const button = document.querySelector('.language-toggle');
    if (currentLang === 'en') {
        button.innerHTML = 'üáªüá≥ Ti·∫øng Vi·ªát';
    } else {
        button.innerHTML = 'üá∫üá∏ English';
    }
}

function toggleTheme() {
    isDarkMode = !isDarkMode;
    document.body.classList.toggle('dark', isDarkMode);
    
    // Update button icon
    const button = document.querySelector('.theme-toggle');
    button.innerHTML = isDarkMode ? '‚òÄÔ∏è' : 'üåô';
}

function toggleDropdown() {
    const dropdown = document.getElementById('downloadDropdown');
    dropdown.classList.toggle('show');
    
    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        if (!event.target.closest('.download-dropdown')) {
            dropdown.classList.remove('show');
        }
    });
}

// Method 1: Using html2pdf.js with simplified version for PDF
async function downloadPDF() {
    const loading = document.getElementById('loadingIndicator');
    loading.classList.add('show');
    
    try {
        // Hide controls during PDF generation
        const controls = document.querySelector('.controls');
        const originalDisplay = controls.style.display;
        controls.style.display = 'none';
        
        // Create simplified version for PDF
        const simplifiedCV = createSimplifiedCV();
        
        // Configure PDF options
        const opt = {
            margin: [0.75, 0.75, 0.75, 0.75],
            filename: `CV_Le_Quang_Dai_Di_${currentLang.toUpperCase()}.pdf`,
            image: { type: 'jpeg', quality: 0.98 },
            html2canvas: { 
                scale: 2,
                useCORS: true,
                letterRendering: true,
                allowTaint: true
            },
            jsPDF: { 
                unit: 'in', 
                format: 'a4', 
                orientation: 'portrait',
                compress: true
            },
            pagebreak: { 
                mode: ['avoid-all', 'css', 'legacy'],
                before: '.pdf-page:not(:first-child)'
            }
        };

        // Generate PDF from simplified version
        await html2pdf().set(opt).from(simplifiedCV).save();
        
        // Clean up
        document.body.removeChild(simplifiedCV);
        
        // Restore controls
        controls.style.display = originalDisplay;
        
    } catch (error) {
        console.error('PDF generation failed:', error);
        alert(currentLang === 'en' ? 'Failed to generate PDF. Please try again.' : 'Kh√¥ng th·ªÉ t·∫°o PDF. Vui l√≤ng th·ª≠ l·∫°i.');
    } finally {
        loading.classList.remove('show');
        document.getElementById('downloadDropdown').classList.remove('show');
    }
}

// Create simplified CV version for PDF export
function createSimplifiedCV() {
    const isVietnamese = currentLang === 'vi';
    
    const simplifiedHTML = `
        <div class="pdf-cv-container">
            <!-- Page 1 -->
            <div class="pdf-page">
                <div class="pdf-header">
                    <h1>L√™ Quang ƒê·∫°i Dƒ©</h1>
                    <h2>${isVietnamese ? 'K·ª∏ S∆Ø B·∫¢O M·∫¨T | C·ª∞U CHUY√äN VI√äN SOC | L·∫¨P TR√åNH VI√äN BACKEND' : 'SECURITY ENGINEER | FORMER SOC ANALYST | BACKEND DEVELOPER'}</h2>
                    <div class="pdf-contact">
                        <span>üì± 0929860265</span> | <span>‚úâÔ∏è dile8861@gmail.com</span>
                    </div>
                </div>

                <div class="pdf-section">
                    <h3>${isVietnamese ? 'GI·ªöI THI·ªÜU' : 'ABOUT ME'}</h3>
                    <p>${isVietnamese ? 
                        'K·ªπ s∆∞ B·∫£o m·∫≠t v·ªõi n·ªÅn t·∫£ng k·ªπ thu·∫≠t v·ªØng ch·∫Øc trong ph√°t tri·ªÉn ph·∫ßn m·ªÅm backend v√† gi√°m s√°t b·∫£o m·∫≠t h·ªá th·ªëng. C√≥ kinh nghi·ªám trong ph√¢n t√≠ch s·ª± c·ªë th·ª±c t·∫ø, x√¢y d·ª±ng h·ªá th·ªëng gi√°m s√°t d·ª±a tr√™n SIEM, tri·ªÉn khai c√¥ng c·ª• ƒë√°nh gi√° l·ªó h·ªïng v√† t√≠ch h·ª£p framework MITRE ATT&CK. Th√†nh th·∫°o trong thi·∫øt k·∫ø API, x·ª≠ l√Ω d·ªØ li·ªáu quy m√¥ l·ªõn v√† tri·ªÉn khai h·ªá th·ªëng ph√¢n t√°n tr√™n AWS. M·ª•c ti√™u ngh·ªÅ nghi·ªáp l√† tr·ªü th√†nh m·ªôt DevSecOps ho·∫∑c K·ªπ s∆∞ B·∫£o m·∫≠t c√≥ kh·∫£ nƒÉng b·∫£o v·ªá h·ªá th·ªëng t·ª´ t·∫ßng ·ª©ng d·ª•ng xu·ªëng t·∫ßng h·∫° t·∫ßng.' :
                        'Security Engineer with a strong technical foundation in backend software development and system security monitoring. Experienced in real-world incident analysis, building SIEM-based monitoring systems, deploying vulnerability assessment tools, and integrating the MITRE ATT&CK framework. Proficient in designing APIs, handling large-scale data processing, and deploying distributed systems on AWS. Career objective is to become a DevSecOps or Security Engineer capable of securing systems from the application layer down to the infrastructure level.'
                    }</p>
                </div>

                <div class="pdf-section">
                    <h3>${isVietnamese ? 'K·ª∏ NƒÇNG CHUY√äN M√îN' : 'TECHNICAL SKILLS'}</h3>
                    <div class="pdf-skills">
                        <div class="skill-row">
                            <strong>${isVietnamese ? 'L·∫≠p tr√¨nh & Ph√°t tri·ªÉn:' : 'Programming & Development:'}</strong>
                            Python, TypeScript, FastAPI, Django, Flask, Angular, MITRE ATT&CK¬Æ
                        </div>
                        <div class="skill-row">
                            <strong>${isVietnamese ? 'ƒê√°m m√¢y & DevOps:' : 'Cloud & DevOps:'}</strong>
                            AWS (Lambda, API Gateway, CloudWatch), GitHub Actions (CI/CD), ${isVietnamese ? 'T·ª± ƒë·ªông h√≥a tri·ªÉn khai AWS' : 'AWS deployment automation'}
                        </div>
                        <div class="skill-row">
                            <strong>${isVietnamese ? 'C√¥ng c·ª• B·∫£o m·∫≠t & Gi√°m s√°t:' : 'Security Tools & Monitoring:'}</strong>
                            OpenVAS, Splunk, Wazuh, Nmap
                        </div>
                        <div class="skill-row">
                            <strong>${isVietnamese ? 'C∆° s·ªü d·ªØ li·ªáu:' : 'Databases:'}</strong>
                            SQL, MySQL, DynamoDB, DocumentDB, MongoDB
                        </div>
                        <div class="skill-row">
                            <strong>${isVietnamese ? 'Kh√°c:' : 'Others:'}</strong>
                            Figma, Git
                        </div>
                    </div>
                </div>

                <div class="pdf-section">
                    <h3>${isVietnamese ? 'H·ªåC V·∫§N' : 'EDUCATION'}</h3>
                    <div class="education-row">
                        <strong>${isVietnamese ? 'ƒê·∫°i h·ªçc Gia ƒê·ªãnh' : 'Gia Dinh University'}</strong>
                        <span class="gpa">GPA: 3.5/4.0</span>
                    </div>
                </div>

                <div class="pdf-section">
                    <h3>${isVietnamese ? 'KINH NGHI·ªÜM L√ÄM VI·ªÜC' : 'EXPERIENCE'}</h3>
                    
                    <div class="experience-block">
                        <div class="company-info">
                            <strong>BaseBS (BASE BUSINESS SOLUTIONS CORPORATION)</strong>
                            <span class="duration">${isVietnamese ? 'Th√°ng 5/2025 ‚Äì Hi·ªán t·∫°i' : 'May 2025 ‚Äì Present'}</span>
                        </div>
                        <div class="project-info">
                            <strong>${isVietnamese ? 'D·ª± √°n: uCRM (Qu·∫£n l√Ω Y√™u c·∫ßu Kh√°ch h√†ng Th·ªëng nh·∫•t)' : 'Project: uCRM (Unify Customer Request Manage)'}</strong>
                        </div>
                        <div class="tech-info">
                            <strong>${isVietnamese ? 'C√¥ng ngh·ªá:' : 'Technologies:'}</strong> Python, Django, Redis, Celery, MongoDB
                        </div>
                        <ul class="responsibilities">
                            <li>${isVietnamese ? 
                                'Cung c·∫•p h·ªó tr·ª£ kh·∫Øc ph·ª•c c√°c v·∫•n ƒë·ªÅ ch·ª©c nƒÉng v√† t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t cho t·ª´ng s·∫£n ph·∫©m tr√™n c√°c agent kh√°c nhau' :
                                'Provided support in troubleshooting functional issues and optimizing performance for each product across different agents'
                            }</li>
                            <li>${isVietnamese ? 
                                'Tri·ªÉn khai c√°c bi·ªán ph√°p b·∫£o m·∫≠t: Ki·ªÉm so√°t truy c·∫≠p, B·∫£o v·ªá d·ªØ li·ªáu, Thi·∫øt k·∫ø API an to√†n' :
                                'Implemented security measures: Access control, Data protection, Secure API design'
                            }</li>
                        </ul>
                        <div class="achievements">
                            <strong>${isVietnamese ? 'Th√†nh t·ª±u:' : 'Achievements:'}</strong>
                            ${isVietnamese ? 
                                'ƒê·∫£m b·∫£o ho·∫°t ƒë·ªông ·ªïn ƒë·ªãnh v√† t·ªëi ∆∞u h√≥a hi·ªáu su·∫•t c·ªßa t·ª´ng s·∫£n ph·∫©m, mang l·∫°i l·ª£i √≠ch t√≠ch c·ª±c ph√π h·ª£p v·ªõi nhu c·∫ßu c·ª• th·ªÉ.' :
                                'Ensured stable operations and optimized performance of each product, delivering tangible benefits tailored to specific needs.'
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Page 2 -->
            <div class="pdf-page">
                <div class="pdf-section">
                    <div class="experience-block">
                        <div class="company-info">
                            <strong>FECredit (C√¥ng ty T√†i ch√≠nh TNHH Ng√¢n h√†ng Vi·ªát Nam Th·ªãnh V∆∞·ª£ng SMBC)</strong>
                            <span class="duration">${isVietnamese ? 'Th√°ng 4/2024 ‚Äì Th√°ng 5/2025' : 'April 2024 ‚Äì May 2025'}</span>
                        </div>
                        
                        <div class="project-info">
                            <strong>${isVietnamese ? 'D·ª± √°n: Portal' : 'Project: Portal'}</strong>
                        </div>
                        <div class="tech-info">
                            <strong>${isVietnamese ? 'C√¥ng ngh·ªá:' : 'Technologies:'}</strong> Angular, AWS (Python), API Gateway, Lambda, S3, CloudWatch, DynamoDB, MySQL
                        </div>
                        <ul class="responsibilities">
                            <li>${isVietnamese ? 
                                'Thi·∫øt k·∫ø v√† duy tr√¨ portal ki·ªÉm th·ª≠ n·ªôi b·ªô cho c√°c ƒë·ªôi QA/QC' :
                                'Designed and maintained internal testing portal for QA/QC teams'
                            }</li>
                            <li>${isVietnamese ? 
                                'X·ª≠ l√Ω logic kinh doanh d·ª±a tr√™n ngo·∫°i l·ªá ƒë∆∞·ª£c k√≠ch ho·∫°t b·ªüi c√°c ticket JIRA' :
                                'Handled exception-based business logic triggered by JIRA tickets'
                            }</li>
                            <li>${isVietnamese ? 
                                'Tri·ªÉn khai h·ªá th·ªëng th√¥ng b√°o quy m√¥ l·ªõn cho t·ªõi 3 tri·ªáu kh√°ch h√†ng' :
                                'Implemented large-scale notification systems for up to 3 million customers'
                            }</li>
                        </ul>

                        <div class="project-info">
                            <strong>${isVietnamese ? 'D·ª± √°n: Voolo' : 'Project: Voolo'}</strong>
                        </div>
                        <div class="tech-info">
                            <strong>${isVietnamese ? 'C√¥ng ngh·ªá:' : 'Technologies:'}</strong> Python, AWS Services, DynamoDB, DocumentDB, MySQL
                        </div>
                        <ul class="responsibilities">
                            <li>${isVietnamese ? 
                                'Ph√°t tri·ªÉn quy tr√¨nh onboarding kh√°ch h√†ng ho√†n ch·ªânh d·ª±a tr√™n t√†i li·ªáu BRD chi ti·∫øt' :
                                'Developed complete customer onboarding workflow based on detailed BRD documentation'
                            }</li>
                            <li>${isVietnamese ? 
                                'Thi·∫øt k·∫ø API v√† tri·ªÉn khai logic ƒëƒÉng k√Ω cho c√°c giai ƒëo·∫°n thu th·∫≠p d·ªØ li·ªáu v√† x√°c minh' :
                                'Designed APIs and implemented registration logic for data collection and verification stages'
                            }</li>
                            <li>${isVietnamese ? 
                                'Ti·∫øn h√†nh ki·ªÉm th·ª≠ API b·∫±ng Postman v√† Pytest ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh ·ªïn ƒë·ªãnh' :
                                'Conducted API testing using Postman and Pytest to ensure stability'
                            }</li>
                        </ul>

                        <div class="achievements">
                            <strong>${isVietnamese ? 'Th√†nh t·ª±u ch√≠nh:' : 'Key Achievements:'}</strong>
                            ${isVietnamese ? 
                                'Gi·∫£m ƒë√°ng k·ªÉ th·ªùi gian gi·∫£i quy·∫øt ticket, ƒë·∫£m b·∫£o ho·∫°t ƒë·ªông PROD kh√¥ng b·ªã gi√°n ƒëo·∫°n, gi·∫£m kh·ªëi l∆∞·ª£ng c√¥ng vi·ªác QA/QC.' :
                                'Significantly reduced ticket resolution time, ensured uninterrupted PROD operations, reduced QA/QC workload.'
                            }
                        </div>
                    </div>

                    <div class="experience-block">
                        <div class="company-info">
                            <strong>${isVietnamese ? 'C√¥ng ty C·ªï ph·∫ßn Gi·∫£i ph√°p v√† D·ªãch v·ª• To√†n c·∫ßu HTC' : 'HTC Global Solutions and Services Joint Stock Company'}</strong>
                            <span class="duration">${isVietnamese ? 'Th√°ng 4/2023 ‚Äì Th√°ng 1/2024' : 'April 2023 ‚Äì January 2024'}</span>
                        </div>
                        
                        <div class="project-info">
                            <strong>${isVietnamese ? 'D·ª± √°n: T√≠ch h·ª£p OpenVAS v·ªõi Splunk' : 'Project: OpenVAS Integration with Splunk'}</strong>
                        </div>
                        <div class="tech-info">
                            <strong>${isVietnamese ? 'C√¥ng ngh·ªá:' : 'Technologies:'}</strong> OpenVAS, Splunk SIEM
                        </div>
                        <ul class="responsibilities">
                            <li>${isVietnamese ? 
                                'Th·ª±c hi·ªán qu√©t l·ªó h·ªïng tr√™n danh s√°ch c√°c m√°y ch·ªß trong h·ªá th·ªëng' :
                                'Conducted vulnerability scans on servers within the system'
                            }</li>
                            <li>${isVietnamese ? 
                                'Chuy·ªÉn c√°c log l·ªó h·ªïng t·ª´ OpenVAS ƒë·∫øn h·ªá th·ªëng Splunk ƒë·ªÉ ph√¢n t√≠ch' :
                                'Transferred vulnerability logs from OpenVAS to Splunk system for analysis'
                            }</li>
                            <li>${isVietnamese ? 
                                'X√¢y d·ª±ng h·ªá th·ªëng gi√°m s√°t l·ªó h·ªïng ƒë·ªÉ cung c·∫•p c·∫£nh b√°o k·ªãp th·ªùi' :
                                'Built vulnerability monitoring system to provide timely alerts'
                            }</li>
                        </ul>

                        <div class="project-info">
                            <strong>${isVietnamese ? 'D·ª± √°n: X√¢y d·ª±ng H·ªá th·ªëng Gi√°m s√°t B·∫£o m·∫≠t' : 'Project: Building Security Monitoring System'}</strong>
                        </div>
                        <div class="tech-info">
                            <strong>${isVietnamese ? 'C√¥ng ngh·ªá:' : 'Technologies:'}</strong> Splunk SIEM, Splunk Studio, Splunk Security
                        </div>
                        <ul class="responsibilities">
                            <li>${isVietnamese ? 
                                'Thu th·∫≠p v√† ph√¢n t√≠ch log t·ª´ c√°c h·ªá th·ªëng b·∫£o m·∫≠t kh√°c nhau' :
                                'Collected and analyzed logs from various security systems'
                            }</li>
                            <li>${isVietnamese ? 
                                'Ph√°t tri·ªÉn h·ªá th·ªëng gi√°m s√°t b·∫£o m·∫≠t tu√¢n th·ªß C√¥ng vƒÉn s·ªë 2973, ph√°t hi·ªán 10+ lo·∫°i t·∫•n c√¥ng m·∫°ng' :
                                'Developed security monitoring system compliant with Official Dispatch 2973, detecting 10+ types of cyberattacks'
                            }</li>
                            <li>${isVietnamese ? 
                                'T·∫°o dashboard ƒë·ªÉ gi√°m s√°t v√† c·∫£nh b√°o, cho ph√©p ƒë·ªôi b·∫£o m·∫≠t ph·∫£n ·ª©ng nhanh v·ªõi c√°c m·ªëi ƒëe d·ªça' :
                                'Created dashboards for monitoring and alerts, enabling security team to respond quickly to threats'
                            }</li>
                        </ul>

                        <div class="achievements">
                            <strong>${isVietnamese ? 'Th√†nh t·ª±u ch√≠nh:' : 'Key Achievements:'}</strong>
                            ${isVietnamese ? 
                                'T√≠ch h·ª£p th√†nh c√¥ng OpenVAS v·ªõi Splunk, x√¢y d·ª±ng h·ªá th·ªëng gi√°m s√°t b·∫£o m·∫≠t ƒë√°p ·ª©ng ti√™u chu·∫©n t·ªï ch·ª©c, tƒÉng c∆∞·ªùng kh·∫£ nƒÉng ph√°t hi·ªán t·∫•n c√¥ng m·∫°ng th·ªùi gian th·ª±c.' :
                                'Successfully integrated OpenVAS with Splunk, built security monitoring system meeting organizational standards, strengthened real-time cyberattack detection capabilities.'
                            }
                        </div>
                    </div>

                    <div class="security-section">
                        <h4>${isVietnamese ? 'C√ÅC BI·ªÜN PH√ÅP B·∫¢O M·∫¨T CH√çNH' : 'KEY SECURITY IMPLEMENTATIONS'}</h4>
                        <div class="security-items">
                            ${isVietnamese ? 
                                'Header B·∫£o m·∫≠t ‚Ä¢ Qu√©t L·ªó h·ªïng ‚Ä¢ Qu·∫£n l√Ω Session ‚Ä¢ B·∫£o m·∫≠t Truy·ªÅn t·∫£i ‚Ä¢ B·∫£o v·ªá D·ªØ li·ªáu ‚Ä¢ Ghi nh·∫≠t k√Ω & Gi√°m s√°t ‚Ä¢ Thi·∫øt k·∫ø API An to√†n ‚Ä¢ X√°c th·ª±c ƒê·∫ßu v√†o & M√£ h√≥a ƒê·∫ßu ra ‚Ä¢ X√°c th·ª±c & ·ª¶y quy·ªÅn' :
                                'Security Headers ‚Ä¢ Vulnerability Scanning ‚Ä¢ Session Management ‚Ä¢ Transport Security ‚Ä¢ Data Protection ‚Ä¢ Logging & Monitoring ‚Ä¢ Secure API Design ‚Ä¢ Input Validation & Output Encoding ‚Ä¢ Authentication & Authorization'
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `;

    // Create temporary container with simplified styles
    const tempContainer = document.createElement('div');
    tempContainer.innerHTML = simplifiedHTML;
    tempContainer.style.cssText = getPDFStyles();
    
    // Hide from view
    tempContainer.style.position = 'absolute';
    tempContainer.style.left = '-9999px';
    tempContainer.style.top = '-9999px';
    
    document.body.appendChild(tempContainer);
    
    return tempContainer;
}

// Get simplified PDF styles
function getPDFStyles() {
    return `
        font-family: Arial, sans-serif;
        line-height: 1.4;
        color: #000;
        background: white;
    `;
}

// Add PDF-specific styles to document head
function addPDFStyles() {
    if (document.getElementById('pdf-styles')) return;
    
    const style = document.createElement('style');
    style.id = 'pdf-styles';
    style.textContent = `
        .pdf-cv-container {
            font-family: Arial, sans-serif;
            line-height: 1.4;
            color: #000;
            background: white;
        }
        
        .pdf-page {
            width: 210mm;
            min-height: 297mm;
            padding: 20mm;
            margin: 0;
            background: white;
            page-break-after: always;
            box-sizing: border-box;
        }
        
        .pdf-page:last-child {
            page-break-after: avoid;
        }
        
        .pdf-header {
            text-align: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid #333;
        }
        
        .pdf-header h1 {
            font-size: 24px;
            font-weight: bold;
            margin: 0 0 8px 0;
            color: #000;
        }
        
        .pdf-header h2 {
            font-size: 14px;
            font-weight: normal;
            margin: 0 0 12px 0;
            color: #333;
        }
        
        .pdf-contact {
            font-size: 12px;
            color: #555;
        }
        
        .pdf-section {
            margin-bottom: 20px;
        }
        
        .pdf-section h3 {
            font-size: 16px;
            font-weight: bold;
            margin: 0 0 10px 0;
            padding-bottom: 3px;
            border-bottom: 1px solid #ccc;
            color: #000;
            text-transform: uppercase;
        }
        
        .pdf-section h4 {
            font-size: 14px;
            font-weight: bold;
            margin: 15px 0 8px 0;
            color: #000;
        }
        
        .pdf-section p {
            font-size: 11px;
            text-align: justify;
            margin: 0;
            line-height: 1.5;
        }
        
        .pdf-skills .skill-row {
            font-size: 11px;
            margin-bottom: 6px;
            line-height: 1.4;
        }
        
        .education-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 12px;
        }
        
        .experience-block {
            margin-bottom: 18px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }
        
        .company-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
            font-size: 13px;
        }
        
        .duration {
            font-style: italic;
            color: #666;
            font-size: 11px;
        }
        
        .project-info {
            font-size: 12px;
            margin-bottom: 5px;
        }
        
        .tech-info {
            font-size: 11px;
            margin-bottom: 8px;
            color: #333;
        }
        
        .responsibilities {
            font-size: 11px;
            margin: 8px 0;
            padding-left: 20px;
            line-height: 1.4;
        }
        
        .responsibilities li {
            margin-bottom: 4px;
        }
        
        .achievements {
            font-size: 11px;
            background: #f9f9f9;
            padding: 8px;
            border-left: 3px solid #333;
            margin-top: 8px;
            line-height: 1.4;
        }
        
        .security-section {
            margin-top: 15px;
        }
        
        .security-items {
            font-size: 10px;
            line-height: 1.5;
            text-align: justify;
        }
        
        .gpa {
            background: #f0f0f0;
            padding: 2px 8px;
            border-radius: 10px;
            font-size: 11px;
        }
        
        @media print {
            .pdf-page {
                margin: 0;
                padding: 15mm;
            }
        }
    `;
    
    document.head.appendChild(style);
}

// Initialize PDF styles when page loads
document.addEventListener('DOMContentLoaded', function() {
    addPDFStyles();
});

// Method 2: Browser Print to PDF
function printCV() {
    // Hide controls during print
    const controls = document.querySelector('.controls');
    const originalDisplay = controls.style.display;
    controls.style.display = 'none';
    
    // Add print styles
    const printStyles = `
        <style media="print">
            @page {
                size: A4;
                margin: 0.5in;
            }
            body { 
                background: white !important;
                -webkit-print-color-adjust: exact;
                color-adjust: exact;
            }
            .cv-container {
                box-shadow: none !important;
                margin: 0 !important;
            }
            .page {
                page-break-after: always;
                break-after: page;
            }
            .page:last-child {
                page-break-after: avoid;
                break-after: avoid;
            }
            .header::before {
                animation: none !important;
            }
        </style>
    `;
    
    const head = document.head;
    const printStyleSheet = document.createElement('div');
    printStyleSheet.innerHTML = printStyles;
    head.appendChild(printStyleSheet);
    
    // Print
    window.print();
    
    // Restore controls after print dialog
    setTimeout(() => {
        controls.style.display = originalDisplay;
        head.removeChild(printStyleSheet);
    }, 100);
    
    document.getElementById('downloadDropdown').classList.remove('show');
}

// Method 3: Save as HTML file
function downloadHTML() {
    const loading = document.getElementById('loadingIndicator');
    loading.classList.add('show');
    
    try {
        // Clone the document
        const htmlContent = document.documentElement.outerHTML;
        
        // Create downloadable HTML with embedded styles
        const fullHTML = `<!DOCTYPE html>
        <html lang="${currentLang}">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>CV - L√™ Quang ƒê·∫°i Dƒ©</title>
            <style>
                .controls { display: none !important; }
                .loading { display: none !important; }
                .pdf-preview { display: none !important; }
            </style>
        </head>
        ${document.body.outerHTML.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')}
        </html>`;
        
        // Create download
        const blob = new Blob([fullHTML], { type: 'text/html' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `CV_Le_Quang_Dai_Di_${currentLang.toUpperCase()}.html`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
    } catch (error) {
        console.error('HTML download failed:', error);
        alert(currentLang === 'en' ? 'Failed to download HTML. Please try again.' : 'Kh√¥ng th·ªÉ t·∫£i HTML. Vui l√≤ng th·ª≠ l·∫°i.');
    } finally {
        loading.classList.remove('show');
        document.getElementById('downloadDropdown').classList.remove('show');
    }
}

// Method 4: Share CV link
async function shareCV() {
    const currentURL = window.location.href;
    const shareData = {
        title: 'CV - L√™ Quang ƒê·∫°i Dƒ©',
        text: currentLang === 'en' ? 
            'Security Engineer | Former SOC Analyst | Backend Developer' :
            'K·ªπ s∆∞ B·∫£o m·∫≠t | C·ª±u Chuy√™n vi√™n SOC | L·∫≠p tr√¨nh vi√™n Backend',
        url: currentURL
    };

    try {
        if (navigator.share) {
            await navigator.share(shareData);
        } else {
            // Fallback: Copy to clipboard
            await navigator.clipboard.writeText(currentURL);
            alert(currentLang === 'en' ? 
                'CV link copied to clipboard!' : 
                'ƒê√£ sao ch√©p link CV v√†o clipboard!');
        }
    } catch (error) {
        // Manual copy fallback
        const textArea = document.createElement('textarea');
        textArea.value = currentURL;
        document.body.appendChild(textArea);
        textArea.select();
        document.execCommand('copy');
        document.body.removeChild(textArea);
        alert(currentLang === 'en' ? 
            'CV link copied to clipboard!' : 
            'ƒê√£ sao ch√©p link CV v√†o clipboard!');
    }
    
    document.getElementById('downloadDropdown').classList.remove('show');
}

function closePDFPreview() {
    document.getElementById('pdfPreview').classList.remove('show');
}

// Add smooth scrolling and print functionality
document.addEventListener('DOMContentLoaded', function() {
    // Add print button functionality
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && e.key === 'p') {
            e.preventDefault();
            printCV();
        }
        
        // Download shortcut
        if (e.ctrlKey && e.key === 'd') {
            e.preventDefault();
            downloadPDF();
        }
    });

    // Add smooth animations on scroll (for web view)
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // Observe all sections for animation
    document.querySelectorAll('.section, .experience-item').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(20px)';
        el.style.transition = 'all 0.6s ease';
        observer.observe(el);
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', function(event) {
        if (!event.target.closest('.download-dropdown')) {
            document.getElementById('downloadDropdown').classList.remove('show');
        }
    });
});

// Alternative PDF generation for better compatibility
function generatePDFAlternative() {
    // Method using browser's built-in PDF generation
    const printWindow = window.open('', '_blank');
    
    const htmlContent = `
        <!DOCTYPE html>
        <html>
        <head>
            <title>CV - L√™ Quang ƒê·∫°i Dƒ©</title>
            <style>
                ${Array.from(document.styleSheets).map(styleSheet => {
                    try {
                        return Array.from(styleSheet.cssRules).map(rule => rule.cssText).join('\n');
                    } catch (e) {
                        return '';
                    }
                }).join('\n')}
                
                @media print {
                    @page { size: A4; margin: 0.5in; }
                    .controls, .loading, .pdf-preview { display: none !important; }
                    body { background: white !important; }
                    .cv-container { box-shadow: none !important; margin: 0 !important; }
                    .page { page-break-after: always; }
                    .page:last-child { page-break-after: avoid; }
                }
            </style>
        </head>
        <body data-lang="${currentLang}">
            ${document.querySelector('.cv-container').outerHTML}
            <script>
                window.onload = function() {
                    window.print();
                    setTimeout(() => window.close(), 1000);
                }
            </script>
        </body>
        </html>
    `;
    
    printWindow.document.write(htmlContent);
    printWindow.document.close();
}

// Additional utility functions for better UX
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: ${type === 'success' ? '#48bb78' : type === 'error' ? '#e53e3e' : '#667eea'};
        color: white;
        padding: 12px 24px;
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 10000;
        animation: slideDown 0.3s ease;
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideUp 0.3s ease';
        setTimeout(() => document.body.removeChild(notification), 300);
    }, 3000);
}

// Add CSS animations for notifications
const style = document.createElement('style');
style.textContent = `
    @keyframes slideDown {
        from { transform: translateX(-50%) translateY(-100%); opacity: 0; }
        to { transform: translateX(-50%) translateY(0); opacity: 1; }
    }
    
    @keyframes slideUp {
        from { transform: translateX(-50%) translateY(0); opacity: 1; }
        to { transform: translateX(-50%) translateY(-100%); opacity: 0; }
    }
`;
document.head.appendChild(style);